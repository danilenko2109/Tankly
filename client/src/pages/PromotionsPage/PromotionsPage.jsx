import React, { useState, useEffect } from 'react'; 
import NavBar from '../../components/NavBar/NavBar'; 
import Header from '../../components/Header/Header';
import './PromotionsPage.scss'; 

const SoonBanner = () => (
  <div className="soon-banner">
    <span>–°–∫–æ—Ä–æ</span>
  </div>
);

const CODE39 = {
  '0': 'nnnwwnwnn',
  '1': 'wnnwnnnnw',
  '2': 'nnwwnnnnw',
  '3': 'wnwwnnnnn',
  '4': 'nnnwwnnnw',
  
  'A': 'wnnnnwnnw',
  'B': 'nnwnnwnnw',
  'C': 'wnwnnwnnn',
 
};

function Code39({ value = '', height = 100, stroke = 3, showText = true }) {
  const sanitized = `${value.toUpperCase().replace(/[^A-Z0-9\-\.\/\+%\$ ]/g, '')}`;
  let x = 0;
  const bars = [];
  const gap = stroke;
  
  for (let i = 0; i < sanitized.length; i++) {
    const char = sanitized[i];
    const pattern = CODE39[char];
    if (!pattern) continue;
    
    for (let j = 0; j < pattern.length; j++) {
      const isBar = j % 2 === 0;
      const wide = pattern[j] === 'w';
      const w = wide ? stroke * 3 : stroke;
      
      if (isBar) {
        bars.push(<rect key={`${i}-${j}`} x={x} y={0} width={w} height={height} rx={2} />);
      }
      x += w;
    }
    x += gap;
  }
  
  return (
    <div className="barcode">
      <svg width={x} height={height} viewBox={`0 0 ${x} ${height}`} xmlns="http://www.w3.org/2000/svg">
        <g fill="currentColor">{bars}</g>
      </svg>
      {showText && <div className="barcode__text">{value}</div>}
    </div>
  );
}

function AddCardModal({ isOpen, onClose, onAddCard }) {
  const [cardNumber, setCardNumber] = useState('');
  const [selectedPartner, setSelectedPartner] = useState('lukoil');
  const [isProcessing, setIsProcessing] = useState(false);
  const [error, setError] = useState('');

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!cardNumber.trim()) {
      setError('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã');
      return;
    }
    
    setIsProcessing(true);
    setError('');
    
    try {
      await new Promise(resolve => setTimeout(resolve, Math.random() * 5000 + 5000));
      
      if (cardNumber.length < 8) {
        throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã');
      }
      
      onAddCard({
        number: cardNumber,
        partner: selectedPartner,
        status: 'loading',
        addedAt: new Date().toISOString()
      });
      
      setCardNumber('');
      onClose();
    } catch (err) {
      setError(err.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–∞—Ä—Ç—ã');
    } finally {
      setIsProcessing(false);
    }
  };

  if (!isOpen) return null;

  return (
    <div className="modal-overlay">
      <div className="modal-content glass-card">
        <div className="modal-header">
          <h2>–ü—Ä–∏–≤—è–∑–∞—Ç—å –∫–∞—Ä—Ç—É</h2>
          <button className="modal-close" onClick={onClose}>√ó</button>
        </div>
        
        <div className="modal-notice">
          <p>–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ä—Ç—ã –≤ –±–∞–∑–µ –∑–∞–π–º–µ—Ç –æ—Ç 5 –¥–æ 10 –º–∏–Ω—É—Ç</p>
        </div>
        
        <form onSubmit={handleSubmit}>
          <div className="form-group">
            <label>–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä—Ç–Ω–µ—Ä–∞:</label>
            <div className="partner-selector">
              <div className={`partner-option ${selectedPartner === 'lukoil' ? 'active' : ''}`} 
                   onClick={() => setSelectedPartner('lukoil')}>
                <div className="partner-logo lukoil">
                  <img src="/Lukoil.svg" alt="–õ—É–∫–æ–π–ª" width='60px' />
                </div>
                <span className='company_name'>–õ—É–∫–æ–π–ª</span>
              </div>
              
              <div className={`partner-option ${selectedPartner === 'rosneft' ? 'active' : ''}`} 
                   onClick={() => setSelectedPartner('rosneft')}>
                <div className="partner-logo rosneft">
                  <img src="/Rosneft.svg" alt="–†–æ—Å–Ω–µ—Ñ—Ç—å" width="60px" />
                </div>
                <span className='company_name'>–†–æ—Å–Ω–µ—Ñ—Ç—å</span>
              </div>
            </div>
          </div>
          
          <div className="form-group">
            <label htmlFor="cardNumber">–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã:</label>
            <input 
              type="text" 
              id="cardNumber" 
              value={cardNumber} 
              onChange={(e) => setCardNumber(e.target.value.replace(/\D/g, ''))}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã" 
              disabled={isProcessing}
            />
          </div>
          
          {error && <div className="error-message">{error}</div>}
          
          <div className="modal-actions">
            <button type="submit" disabled={isProcessing} className={isProcessing ? 'processing' : ''} className="mainbtn">
              {isProcessing ? '–ü—Ä–æ–≤–µ—Ä–∫–∞...' : '–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç—É'}
            </button>
            <button type="button" onClick={onClose} disabled={isProcessing} className="mainbtn" background-color="red">
              –û—Ç–º–µ–Ω–∞
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}

function UserCards({ cards, onAddCard, onDeleteCard }) {
  return (
    <div className="user-cards glass-card">
      <div className="user-cards-header">
        <h2>–ú–æ–∏ –∫–∞—Ä—Ç—ã</h2>
        <button className="add-card-btn" onClick={onAddCard}>
          + –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç—É
        </button>
      </div>
      
      {cards.length === 0 ? (
        <div className="no-cards">
          <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç</p>
        </div>
      ) : (
        <div className="cards-list">
  {cards.map((card, index) => (
    <div key={index} className="card-item">
      <div className={`card-logo ${card.partner}`}>
        <img 
          src={card.partner === 'lukoil' ? '/Lukoil.svg' : '/Rosneft.svg'} 
          alt={card.partner === 'lukoil' ? '–õ—É–∫–æ–π–ª' : '–†–æ—Å–Ω–µ—Ñ—Ç—å'}
          className="partner-logo-img" width="50px"
        />
      </div>
      <div className="card-info">
        <div className="card-number">**** {card.number.slice(-4)}</div>
        <div className={`card-status ${card.status}`}>
          {card.status === 'active' ? '–ê–∫—Ç–∏–≤–Ω–∞' : '–ó–∞–≥—Ä—É–∑–∫–∞...'}
        </div>
      </div>
      <button 
        className="delete-card-btn"
        onClick={() => onDeleteCard(index)}
        title="–£–¥–∞–ª–∏—Ç—å –∫–∞—Ä—Ç—É"
      >
        √ó
      </button>
    </div>
  ))}
</div>
      )}
    </div>
  );
}

function PromotionsPage() {
  const discountCode = "DISCOUNT-2025-15%";
  const [showAddCardModal, setShowAddCardModal] = useState(false);
  const [userCards, setUserCards] = useState([]);
  const [showWelcomeModal, setShowWelcomeModal] = useState(false);

  const checkCardStatus = (cards) => {
    const now = new Date();
    return cards.map(card => {
      if (card.status === 'loading') {
        const addedTime = new Date(card.addedAt);
        const diffMinutes = (now - addedTime) / (1000 * 60);
        
        if (diffMinutes >= 10) {
          return { ...card, status: 'active' };
        }
      }
      return card;
    });
  };

  useEffect(() => {
    const hasVisited = localStorage.getItem('hasVisitedPromotions');
    if (!hasVisited) {
      setShowWelcomeModal(true);
      localStorage.setItem('hasVisitedPromotions', 'true');
    }

    const savedCards = localStorage.getItem('userCards');
    if (savedCards) {
      const parsedCards = JSON.parse(savedCards);
      const updatedCards = checkCardStatus(parsedCards);
      setUserCards(updatedCards);
      localStorage.setItem('userCards', JSON.stringify(updatedCards));
    }

    const interval = setInterval(() => {
      setUserCards(prevCards => {
        const updatedCards = checkCardStatus(prevCards);
        localStorage.setItem('userCards', JSON.stringify(updatedCards));
        return updatedCards;
      });
    }, 60000);

    return () => clearInterval(interval);
  }, []);

  const handleAddCard = (cardData) => {
    const newCards = [...userCards, cardData];
    setUserCards(newCards);
    localStorage.setItem('userCards', JSON.stringify(newCards));
  };

  const handleDeleteCard = (index) => {
    const newCards = userCards.filter((_, i) => i !== index);
    setUserCards(newCards);
    localStorage.setItem('userCards', JSON.stringify(newCards));
  };

  const closeWelcomeModal = () => {
    setShowWelcomeModal(false);
  };

  return (
    <div className="promotions-page">
      <Header></Header>
      <div className="animated-background">
        <div className="particles"></div>
        <div className="gradient-overlay"></div>
      </div>
      
      <div className="promotions-container">
        <div className="discount-banner glass-card">
          <h1>–í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å–∫–∏–¥–∫–∞</h1>
          <p className="discount-amount">15% –Ω–∞ –≤—Å—ë —Ç–æ–ø–ª–∏–≤–æ</p>
          
          <div className="barcode-container">
            <Code39 value={discountCode} height={100} stroke={3} />
          </div>
          
          <div className="discount-info">
            <div className="discount-detail">
              {/* <span className="label">–ö–æ–¥ —Å–∫–∏–¥–∫–∏:</span>
              <span className="value">{discountCode}</span> */}
            </div>
            <div className="discount-detail">
              <span className="label">–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:</span>
              <span className="value">31.12.2025</span>
            </div>
          </div>
        </div>

        <UserCards 
          cards={userCards} 
          onAddCard={() => setShowAddCardModal(true)} 
          onDeleteCard={handleDeleteCard}
        />

        <div className="instruction-card glass-card">
          <h2>üéØ –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∫–∏–¥–∫–∏</h2>
          <p>–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Å–∫–∏–¥–æ–∫ –Ω–∞ –∑–∞–ø—Ä–∞–≤–∫–µ:</p>
          <ol>
            <li>–ü–æ–∫–∞–∂–∏—Ç–µ —ç—Ç–æ—Ç —à—Ç—Ä–∏—Ö-–∫–æ–¥ –∫–∞—Å—Å–∏—Ä—É</li>
            <li>–ò–ª–∏ –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ –µ–≥–æ –Ω–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ</li>
            <li>–°–∫–∏–¥–∫–∞ aplicar√° –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</li>
            <li>–û–ø–ª–∞—Ç–∏—Ç–µ –∑–∞–∫–∞–∑ –ª—é–±—ã–º —Å–ø–æ—Å–æ–±–æ–º</li>
          </ol>
        </div>

        <div className="promotions-grid">
          <div className="promotion-card glass-card">
            <div className="promotion-icon">‚õΩ</div>
            <h3>–ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è —Å–∫–∏–¥–∫–∞</h3>
            <p>–í—Å–µ–≥–¥–∞ –ø–æ–ª—É—á–∞–π—Ç–µ —Å–∫–∏–¥–∫—É –¥–æ 4‚ÇΩ/–ª –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞</p>
            <div className="promotion-discount">–î–æ -4‚ÇΩ/–ª</div>
          </div>
          
          <div className="promotion-card glass-card">
            <SoonBanner />
            <div className="promotion-icon">üåô</div>
            <h3>–ù–æ—á–Ω–∞—è –∑–∞–ø—Ä–∞–≤–∫–∞</h3>
            <p>–° 22:00 –¥–æ 06:00 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å–∫–∏–¥–∫–∞ 2%</p>
            <div className="promotion-discount">-2%</div>
          </div>
          
          <div className="promotion-card glass-card">
            <SoonBanner />
            <div className="promotion-icon">üéÇ</div>
            <h3>–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è</h3>
            <p>–í –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –ø–æ–ª—É—á–∞–π—Ç–µ –¥–≤–æ–π–Ω—É—é —Å–∫–∏–¥–∫—É</p>
            <div className="promotion-discount">x2 —Å–∫–∏–¥–∫–∞</div>
          </div>
          
          <div className="promotion-card glass-card">
            <SoonBanner />
            <div className="promotion-icon">‚òï</div>
            <h3>–ö–æ—Ñ–µ + —Ç–æ–ø–ª–∏–≤–æ</h3>
            <p>–ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∫–æ—Ñ–µ —Å–∫–∏–¥–∫–∞ 1.5‚ÇΩ –Ω–∞ –∫–∞–∂–¥—ã–π –ª–∏—Ç—Ä</p>
            <div className="promotion-discount">-1.5‚ÇΩ/–ª</div>
          </div>
          
          <div className="promotion-card glass-card">
            <SoonBanner />
            <div className="promotion-icon">üë•</div>
            <h3>–ü—Ä–∏–≤–µ–¥–∏ –¥—Ä—É–≥–∞</h3>
            <p>–ü—Ä–∏–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–∞ –∏ –ø–æ–ª—É—á–∏—Ç–µ +500 –±–æ–Ω—É—Å–Ω—ã—Ö –±–∞–ª–ª–æ–≤</p>
            <div className="promotion-discount">+500 –±–∞–ª–ª–æ–≤</div>
          </div>
          
          <div className="promotion-card glass-card">
            <SoonBanner />
            <div className="promotion-icon">üí≥</div>
            <h3>–ö–∞—Ä—Ç–æ–π –æ–Ω–ª–∞–π–Ω</h3>
            <p>–û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ 1%</p>
            <div className="promotion-discount">-1%</div>
          </div>
        </div>

        <div className="qr-instruction glass-card">
          <h2>üì± –ì–¥–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —à—Ç—Ä–∏—Ö-–∫–æ–¥</h2>
          <div className="qr-locations">
            <div className="qr-location">
              <div className="location-icon">üè™</div>
              <div className="location-info">
                <h4>–ù–∞ –∫–∞—Å—Å–µ</h4>
                <p>–ü–æ–∫–∞–∂–∏—Ç–µ —à—Ç—Ä–∏—Ö-–∫–æ–¥ –∫–∞—Å—Å–∏—Ä—É –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ</p>
              </div>
            </div>
            
            <div className="qr-location">
              <div className="location-icon">üì±</div>
              <div className="location-info">
                <h4>–ù–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ</h4>
                <p>–û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ –∫–æ–¥ –Ω–∞ –ø–ª–∞—Ç–µ–∂–Ω–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ</p>
              </div>
            </div>
            
            <div className="qr-location">
              <div className="location-icon">‚õΩ</div>
              <div className="location-info">
                <h4>–ù–∞ –∫–æ–ª–æ–Ω–∫–µ</h4>
                <p>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –∑–∞–ø—Ä–∞–≤–∫–∏</p>
              </div>
            </div>
          </div>
        </div>

        <div className="terms-section glass-card">
          <h3>üìã –£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∫–∏–¥–æ–∫</h3>
          <ul>
            <li>–°–∫–∏–¥–∫–∏ –Ω–µ —Å—É–º–º–∏—Ä—É—é—Ç—Å—è —Å –¥—Ä—É–≥–∏–º–∏ –∞–∫—Ü–∏—è–º–∏</li>
            <li>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–∏–¥–∫–∞ 20% –æ—Ç —Å—É–º–º—ã —á–µ–∫–∞</li>
            <li>–î–µ–π—Å—Ç–≤—É–µ—Ç –Ω–∞ –≤—Å–µ –≤–∏–¥—ã —Ç–æ–ø–ª–∏–≤–∞</li>
            <li>–ù–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –Ω–∞ —Å–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–æ–≤–∞—Ä—ã</li>
            <li>–ê–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç –Ω–∞ –≤—Å–µ—Ö –ê–ó–° —Å–µ—Ç–∏</li>
          </ul>
        </div>
      </div>

      <AddCardModal 
        isOpen={showAddCardModal} 
        onClose={() => setShowAddCardModal(false)} 
        onAddCard={handleAddCard} 
      />

      {showWelcomeModal && (
        <div className="modal-overlay">
          <div className="modal-content welcome-modal glass-card">
            <div className="modal-header">
              <h2>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏!</h2>
            </div>
            
            <div className="welcome-content">
              <p>–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö —Å–∫–∏–¥–æ–∫ –ø—Ä–∏–≤—è–∂–∏—Ç–µ —Å–≤–æ–∏ –∫–∞—Ä—Ç—ã –∑–∞–ø—Ä–∞–≤–æ–∫</p>
              
              <div className="partners-showcase">
                <div className="partner-card">
                  <div className="partner-logo lukoil">–õ—É–∫–æ–π–ª</div>
                  <p>–°–∫–∏–¥–∫–∏ –¥–æ 5%</p>
                </div>
                
                <div className="partner-card">
                  <div className="partner-logo rosneft">–†–æ—Å–Ω–µ—Ñ—Ç—å</div>
                  <p>–°–∫–∏–¥–∫–∏ –¥–æ 4%</p>
                </div>
              </div>
            </div>
            
            <div className="modal-actions">
              <button onClick={closeWelcomeModal}>–ü–æ–Ω—è—Ç–Ω–æ</button>
              <button 
                onClick={() => {
                  closeWelcomeModal();
                  setShowAddCardModal(true);
                }} 
                className="primary"
              >
                –ü—Ä–∏–≤—è–∑–∞—Ç—å –∫–∞—Ä—Ç—É
              </button>
            </div>
          </div>
        </div>
      )}

      <NavBar activeTab="promotions" />
    </div>
  );
}

export default PromotionsPage;